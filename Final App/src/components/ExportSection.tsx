import { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Download, Mail, FileText, Share } from 'lucide-react';
import { useToast } from '@/hooks/use-toast';

interface ExportSectionProps {
  anomalyData: any[];
  summary: string;
}

export const ExportSection = ({ anomalyData, summary }: ExportSectionProps) => {
  const { toast } = useToast();

  const downloadCSV = () => {
    const csvContent = [
      ['Date', 'Energy Output', 'Anomaly Flag', 'Score'],
      ...anomalyData.map(row => [row.date, row.energyOutput, row.anomalyFlag, row.score])
    ].map(row => row.join(',')).join('\n');

    const blob = new Blob([csvContent], { type: 'text/csv' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `energy-anomaly-report-${new Date().toISOString().split('T')[0]}.csv`;
    a.click();
    window.URL.revokeObjectURL(url);

    toast({
      title: "Report Downloaded",
      description: "CSV report has been downloaded successfully.",
    });
  };

  const downloadSummary = () => {
    const blob = new Blob([summary], { type: 'text/plain' });
    const url = window.URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `energy-analysis-summary-${new Date().toISOString().split('T')[0]}.txt`;
    a.click();
    window.URL.revokeObjectURL(url);

    toast({
      title: "Summary Downloaded",
      description: "Text summary has been downloaded successfully.",
    });
  };

  const sendEmail = () => {
    const subject = encodeURIComponent('Energy Analysis Report');
    const body = encodeURIComponent(`Energy Analysis Summary:\n\n${summary}\n\nGenerated by Rayfield Systems`);
    window.open(`mailto:?subject=${subject}&body=${body}`);

    toast({
      title: "Email Client Opened",
      description: "Your default email client has been opened with the report.",
    });
  };

  const exportPDF = () => {
    // In a real application, you would implement PDF generation here
    toast({
      title: "PDF Export",
      description: "PDF export functionality would be implemented here.",
      variant: "destructive"
    });
  };

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Share className="h-5 w-5" />
          Export & Share
        </CardTitle>
        <CardDescription>
          Download reports and share analysis results
        </CardDescription>
      </CardHeader>
      <CardContent>
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-4">
          <Button 
            onClick={downloadCSV}
            variant="outline" 
            className="flex items-center gap-2 h-auto py-4 flex-col"
          >
            <Download className="h-5 w-5" />
            <div className="text-center">
              <div className="font-medium">Download Report</div>
              <div className="text-xs text-muted-foreground">CSV Format</div>
            </div>
          </Button>

          <Button 
            onClick={downloadSummary}
            variant="outline" 
            className="flex items-center gap-2 h-auto py-4 flex-col"
          >
            <FileText className="h-5 w-5" />
            <div className="text-center">
              <div className="font-medium">Download Summary</div>
              <div className="text-xs text-muted-foreground">TXT Format</div>
            </div>
          </Button>

          <Button 
            onClick={sendEmail}
            variant="outline" 
            className="flex items-center gap-2 h-auto py-4 flex-col"
          >
            <Mail className="h-5 w-5" />
            <div className="text-center">
              <div className="font-medium">Send via Email</div>
              <div className="text-xs text-muted-foreground">Share Results</div>
            </div>
          </Button>

          <Button 
            onClick={exportPDF}
            variant="outline" 
            className="flex items-center gap-2 h-auto py-4 flex-col"
          >
            <FileText className="h-5 w-5" />
            <div className="text-center">
              <div className="font-medium">Export as PDF</div>
              <div className="text-xs text-muted-foreground">Full Report</div>
            </div>
          </Button>
        </div>
      </CardContent>
    </Card>
  );
};